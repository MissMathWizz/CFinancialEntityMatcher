res <- httr::GET(url = 'https://quantel-io.p.rapidapi.com/symbols', query = params)
install.packages("readxl")
library(readxl)
ISIN <- read_excel("/Users/yw/Downloads/stake research & ISIN_YW_117.xlsx",sheet= 2)
HK <- read_excel("/Users/yw/Downloads/stake research & ISIN_YW_117.xlsx", sheet = 5)
View(ISIN)
install.packages("fuzzyjoin")
library(dplyr)
library(fuzzyjoin)
joined_dists <- ISIN %>%
joined_dists <- ISIN %>%
library(stringdist)
library(stringdist)
library(fuzzyjoin)
joined_dists <- ISIN %>%stringdist_inner_join(HK, by = c(misspelling = c("entity_name_en","Description"), max_dist = 2, distance_col = "distance")
joined_dists <- ISIN %>%stringdist_inner_join(HK, by = c(misspelling = c("entity_name_en","Description"), max_dist = 2, distance_col = "distance"))
joined_dists <- ISIN %>% stringdist_inner_join(HK, by = c(misspelling = c("entity_name_en","Description"), max_dist = 2, distance_col = "distance"))
rlang::last_error()
rlang::last_trace()
stringdist_join(ISIN, HK,
by=c("entity_name_en","Description"), mode ='left', method="jw", max_dist =99, distance_col='dist')
stringdist_join(ISIN, HK,
by=c("entity_name_en","Description"), mode ='left', method="jw", max_dist =99, distance_col='dist')%>%group_by(entity_name_en.x)%>%slice_min(order_by=dist, n=1)
stringdist_join(ISIN, HK,
by=c("entity_name_en","Description"), mode ='left', method="jw", max_dist =99, distance_col='dist')%>%group_by(entity_name_en.x)%>%slice_min(order_by=dist, n=1)
ISIN <- ISIN%>%rename(company=entity_name_en)
View(ISIN)
HK <- HK%>%rename(company=Description)
HK <- HK%>%rename(company=Description)
View(HK)
HK <- read_excel("/Users/yw/Downloads/stake research & ISIN_YW_117.xlsx", sheet = 5, skip=1)
View(HK)
HK <- HK%>%rename(company=Description)
stringdist_join(ISIN, HK,
by="company", mode ='left', method="jw", max_dist =99, distance_col='dist')%>%group_by(entity_name_en.x)%>%slice_min(order_by=dist, n=1)
stringdist_join(ISIN, HK,
by="company", mode ='left', method="jw", max_dist =99, distance_col='dist')%>%group_by(entity_name_en.x)%>%slice_min(order_by=dist, n=1)
stringdist_join(ISIN, HK,
by="company", mode ='left', method="jw", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
stringdist_join(ISIN, HK,
by="company", mode ='left', method="jw", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
mm<-stringdist_join(ISIN, HK,
by="company", mode ='left', method="jw", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
View(mm)
ISIN <- ISIN%>%rename(company=entity_name_en)
HK <- HK%>%rename(company=Description)
mmm<-mm[[company.x,company.y,dist]]
mmm<-mm[["company.x","company.y","dist"]]
mmm<-mm[[c("company.x","company.y","dist")]]
mmm<-mm[:,c("company.x","company.y","dist")]
mmm<-mm[,c("company.x","company.y","dist")]
View(mmm)
matched <- mmm[,c("dist" =0)]
View(matched)
matched <- mmm[mmm$dist=0]
matched <- mmm[mmm$dist==0]
matched <- mmm[mmm$dist=0]
matched <- mmm[mmm$dist=0.00]
matched <- mmm[dist=0.00]
matched <- mmm[mmm$dist=0]
matched <- mmm[mmm$dist=0,]
matched <- mmm[,mmm$dist=0]
matched <- subset(mmm, dist=0)
matched <- subset(mmm, dist=0)
matched <- subset(mmm, dist=0)
View(matched)
matched <- subset(mmm, dist=0.000000000)
View(matched)
class(mmm)
matched <- subset(mmm, dist==0.000000000)
View(matched)
unmatched <- subset(mmm, dist!=0.000000000)
View(unmatched)
al_mat<- subset(unmatched, dist<0.08)
View(al_mat)
al_mat<- subset(unmatched, dist<0.1)
View(al_mat)
View(al_mat)
install.packages("writexl")
library("writexl")
write_xlsx(al_mat,"/Users/yw/Downloads/almat.xlsx")
View(HK)
View(mmm)
View(mmm)
View(mm)
mmm<-mm[,c("company.x","company.y","dist","Local Symbol")]
View(mmm)
matched <- subset(mmm, dist==0.000000000)
unmatched <- subset(mmm, dist!=0.000000000)
al_mat<- subset(unmatched, dist<0.1)
write_xlsx(al_mat,"/Users/yw/Downloads/almat.xlsx")
library(readxl)
CSI700_saction_mapping <- read_excel("CSI700_saction_mapping.xlsx")
View(CSI700_saction_mapping)
library(readxl)
CSI700_saction_mapping <- read_excel("CSI700_saction_mapping.xlsx",
sheet = "CSI700")
View(CSI700_saction_mapping)
sanction <- read_excel("CSI700_saction_mapping.xlsx")
> CSI700 <- read_excel("CSI700_saction_mapping.xlsx",  sheet = "CSI700")
View(sanction)
sanction <- read_excel("CSI700_saction_mapping.xlsx")
CSI700 <- read_excel("CSI700_saction_mapping.xlsx",  sheet = "CSI700")
View(CSI700)
View(sanction)
mm<-stringdist_join(sanction, CSI700,
by=c("entity_name_en", "Entity_EN"), mode ='left', method="jw", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
#fuzzyjoin
install.packages("fuzzyjoin")
library(dplyr)
library(fuzzyjoin)
library(stringdist)
#export into excel
install.packages("writexl")
library("writexl")
mm<-stringdist_join(sanction, CSI700,
by=c("entity_name_en", "Entity_EN"), mode ='left', method="jw", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
library(dplyr)
library(fuzzyjoin)
library(stringdist)
library("writexl")
mm<-stringdist_join(sanction, CSI700,
by=c("entity_name_en", "Entity_EN"), mode ='left', method="jw", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
mm<-stringdist_join(sanction, CSI700,
by=c("Entity_EN","entity_name_en"), mode ='left', method="jw", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
joined_dists <- sanction %>% stringdist_inner_join(CSI700, by = c(misspelling = c("Entity_EN","entity_name_en"), max_dist = 2, distance_col = "distance"))
library(readxl)
library(dplyr)
library(fuzzyjoin)
library(stringdist)
library("writexl")
sanction <- read_excel("CSI700_saction_mapping.xlsx")
CSI700 <- read_excel("CSI700_saction_mapping.xlsx",  sheet = "CSI700")
joined_dists <- sanction %>% stringdist_inner_join(CSI700, by = c(misspelling = c("Entity_EN","entity_name_en"), max_dist = 2, distance_col = "distance"))
joined_dists <- sanction %>% stringdist_inner_join(CSI700, by = c(misspelling = c("entity_name_en","Entity_EN"), max_dist = 2, distance_col = "distance"))
joined_dists <- sanction %>% stringdist_inner_join(CSI700, by = c(misspelling = c("entity_name_en","Entity_EN"), max_dist = 2, distance_col = "distance"))
class(CSI700)
sanction <- sanction%>%rename(company=entity_name_en)
sanction <- sanction%>%rename(company=entity_name_en)
library(dplyr)
sanction <- sanction%>%rename(company=Entity_EN)
CSI700 <- CSI700%>%rename(company=entity_name_en)
mm<-stringdist_join(sanction, CSI700,
by="company", mode ='left', method="jw", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
View(mm)
View(mm)
mmm<-mm[,c("company.x","company.y","dist","Match MSCI - Direct Exposure")]
mmm$`Match MSCI - Direct Exposure`[mmm$dist<0.1] <- mmm$company.y
mmm$`Match MSCI - Direct Exposure`[mmm$dist<0.1] <- mmm$company.y
View(mmm)
mm<-stringdist_join(sanction, CSI700,
by="company", mode ='left', method="jw", max_dist =50, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
mmm<-mm[,c("company.x","company.y","dist","Match MSCI - Direct Exposure")]
mmm$`Match MSCI - Direct Exposure`[mmm$dist<0.1] <- mmm$company.y
write_xlsx(al_mat,"/Users/yw/Downloads/almat.xlsx")
View(mmm)
mm<-stringdist_join(CSI700, sanction,
by="company", mode ='left', method="jw", max_dist =50, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
mmm<-mm[,c("company.x","company.y","dist","Match MSCI - Direct Exposure")]
mmm$`Match MSCI - Direct Exposure`[mmm$dist<0.1] <- mmm$company.y
sanction <- sanction%>%rename(company=Entity_EN)
CSI700 <- CSI700%>%rename(company=entity_name_en)
mm<-stringdist_join(CSI700, sanction,
by="company", mode ='left', method="jw", max_dist =50, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
mmm<-mm[,c("company.x","company.y","dist","Match MSCI - Direct Exposure")]
mmm$`Match MSCI - Direct Exposure`[mmm$dist<0.1] <- mmm$company.y
View(mmm)
mm<-stringdist_join(CSI700, sanction,
by="company", mode ='left', method="osa", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
mmm<-mm[,c("company.x","company.y","dist","Match MSCI - Direct Exposure")]
mmm$`Match MSCI - Direct Exposure`[mmm$dist<0.1] <- mmm$company.y
mm<-stringdist_join(CSI700, sanction,
by="company", mode ='left', method="lv", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
library(reticulate)
install.packages("reticulate")
library(reticulate)
#load Python modules
DIFFLIB <- reticulate::import("difflib")
library(fuzzywuzzyR)
install.packages("fuzzywuzzyR")
library(fuzzywuzzyR)
reticulate::py_config()
install.packages("fuzzywuzzyR")
install.packages("fuzzywuzzyR")
DIFFLIB$get_close_matches(sanc_vc[1], CSI_vec, 3L, cutoff=0 )
### Define two vectors of string to be matched
sanc_vc<-sanction$company
CSI_vc<-CSI700$company
DIFFLIB$get_close_matches(sanc_vc[1], CSI_vec, 3L, cutoff=0 )
DIFFLIB$get_close_matches(sanc_vc[1], CSI_vc, 3L, cutoff=0 )
DIFFLIB$get_close_matches(sanc_vc[1], CSI_vc, 10L, cutoff=0 )
length(sanc_vc)
#difflib
#create function that gets the best matches for two vectors
DIFFLIB$get_close_matches(sanc_vc[1], CSI_vc, 10L, cutoff=0 )
get_best_matches <- function(sanc_vc,CSI_vc) {
#non-vectorized version of the function
get_best_match <- function(from_String,CSI_vc ){
return(DIFFLIB$get_close_matches(sanc_vc[1], CSI_vc, 10L, cutoff=0 ))
}
#vectorize the function
unlist(lapply(sanc_vc, function(sanc_vc) get_best_match(sanc_vc)))
}
SequenceMatcher$new(sanc_vc)
SequenceMatcher$new(sanc_vc[1], difflib_matches[1])
SequenceMatcher$new(sanc_vc[1], difflib_matches[1]$ratio())
#difflib
#create function that gets the best matches for two vectors
# Create function that gets the best matches for two vectors of strings, using difflib
get_best_matches <- function(from_vec, to_vec) {
# Non-vectorized version of the function
get_best_match <- function(from_string, to_vec) {
return(DIFFLIB$get_close_matches(from_string, to_vec, 1L, cutoff = 0))
}
# Vectorize the function
unlist(lapply(from_vec, function(from_vec) get_best_match(from_vec, to_vec)))
}
difflib_matches <- get_best_matches(sanc_vc, CSI_vc)
# Create function that computes the similarity score between two sets of strings, using difflib
get_score <- function(strings1, strings2) {
return(SequenceMatcher$new(strings1, strings2)$ratio())
}
get_score <- Vectorize(get_score)
difflib_scores <- get_score(sanc_vc, difflib_matches)
# Create function that computes the similarity score between two sets of strings, using difflib
get_score <- function(strings1, strings2) {
return(SequenceMatcher$new(strings1, strings2)$ratio())
}
get_score <- Vectorize(get_score)
difflib_scores <- get_score(sanc_vc, difflib_matches)
difflib_scores
#Polyfuzz
tfidf_results <- POLYFUZZ$PolyFuzz("TF-IDF")$match(sanc_vc, CSI_vc)$get_matches()
POLYFUZZ <- reticulate::import("polyfuzz")
library(fuzzywuzzyR)
install.packages("fuzzywuzzyR")
install.packages("fuzzywuzzyR")
library(fuzzywuzzyR)
POLYFUZZ <- reticulate::import("polyfuzz")
POLYFUZZ <- reticulate::import("polyfuzz")
library(fuzzywuzzyR)
reticulate::py_config()
POLYFUZZ <- reticulate::import("polyfuzz")
library(fuzzywuzzyR)
#Polyfuzz
tfidf_results <- POLYFUZZ$PolyFuzz("TF-IDF")$match(sanc_vc, CSI_vc)$get_matches()
reticulate::py_config()
library(fuzzywuzzyR)
#reticulate::py_config()
POLYFUZZ <- reticulate::import("polyfuzz")
path_to_python <- "/anaconda/bin/python"
use_python(path_to_python)
# Use polyfuzz to perform fuzzy string matching
# EditDistance
editdistance_results <- POLYFUZZ$PolyFuzz("EditDistance")$match(sanc_vc, CSI_vc)$get_matches()
mm<-stringdist_join(CSI700, sanction,
by="company", mode ='left', method="dl", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
mmm<-mm[,c("company.x","company.y","dist","Match MSCI - Direct Exposure")]
View(mmm)
mm<-stringdist_join(CSI700, sanction,
by="company", mode ='left', method="hamming", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
mmm<-mm[,c("company.x","company.y","dist","Match MSCI - Direct Exposure")]
mm<-stringdist_join(CSI700, sanction,
by="company", mode ='left', method="lcs", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
mmm<-mm[,c("company.x","company.y","dist","Match MSCI - Direct Exposure")]
View(mmm)
mm<-stringdist_join(CSI700, sanction,
by="company", mode ='left', method="qgram", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
mmm<-mm[,c("company.x","company.y","dist","Match MSCI - Direct Exposure")]
sanction <- sanction%>%rename(company=Entity_CN)
CSI700 <- CSI700%>%rename(company=entity_name_cn)
library(dplyr)
library(fuzzyjoin)
library(stringdist)
### Define two vectors of string to be matched
sanc_vc<-sanction$company
CSI_vc<-CSI700$company
sanction <- sanction%>%rename(company=Entity_CN)
CSI700 <- CSI700%>%rename(company=entity_name_cn)
View(DIFFLIB)
View(DIFFLIB)
View(DIFFLIB)
sanction <- read_excel("CSI700_saction_mapping.xlsx")
CSI700 <- read_excel("CSI700_saction_mapping.xlsx",  sheet = "CSI700")
library(readxl)
l
sanction <- read_excel("CSI700_saction_mapping.xlsx")
CSI700 <- read_excel("CSI700_saction_mapping.xlsx",  sheet = "CSI700")
sanction <- sanction%>%rename(company=Entity_CN)
CSI700 <- CSI700%>%rename(company=entity_name_cn)
mm<-stringdist_join(CSI700, sanction,
by="company", mode ='left', method="qgram", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
mmm<-mm[,c("company.x","company.y","dist","Match MSCI - Direct Exposure")]
library(readxl)
CSI700_saction_mapping <- read_excel("CSI700_saction_mapping.xlsx",
sheet = "Sheet1")
View(CSI700_saction_mapping)
#read excel
install.packages("readxl")
library(readxl)
install.packages("readxl")
library(dplyr)
library(fuzzyjoin)
library(stringdist)
library("writexl")
library(reticulate)
library(readxl)
COB <- read_excel("CSI700_saction_mapping.xlsx",  sheet = "Sheet1")
sanction <- sanction%>%rename(company=Entity_CN)
View(COB)
sanction <- COB%>%rename(company=`COB _Entity`)
COB <- COB%>%rename(company=`COB _Entity`)
xx<-stringdist_join(CSI700, COB,
by="company", mode ='left', method="qgram", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
xxx<-xx[,c("company.x","company.y","dist","Match MSCI - Direct Exposure")]
xxx<-xx[,c("company.x","company.y","dist","Match MSCI - Direct Exposure")]
View(xx)
sanction <- read_excel("CSI700_saction_mapping.xlsx")
CSI700 <- read_excel("CSI700_saction_mapping.xlsx",  sheet = "CSI700")
sanction <- sanction%>%rename(company=Entity_EN)
CSI700 <- CSI700%>%rename(company=entity_name_en)
COB <- read_excel("CSI700_saction_mapping.xlsx",  sheet = "Sheet1")
COB <- COB%>%rename(company=`COB _Entity`)
xx<-stringdist_join(CSI700, COB,
by="company", mode ='left', method="qgram", max_dist =99, distance_col='dist')%>%group_by(company.x)%>%slice_min(order_by=dist, n=1)
xxx<-xx[,c("company.x","company.y","dist")]
View(xxx)
write_xlsx(xxx,"/Users/yw/Downloads/almat.xlsx")
